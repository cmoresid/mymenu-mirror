<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Categories/NSObject+RACLifting.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cat/NSObject(RACLifting)</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>NSObject+RACLifting.h</DeclaredIn>
            
			
			<NodeRef refid="158"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSObject/rac_liftSelector:withSignals:</TokenIdentifier>
			<Abstract type="html">Lifts the selector on the receiver into the reactive world. The selector will
be invoked whenever any signal argument sends a value, but only after each
signal has sent an initial value.</Abstract>
			<DeclaredIn>NSObject+RACLifting.h</DeclaredIn>
			
			<Declaration>- (RACSignal *)rac_liftSelector:(SEL)selector withSignals:(RACSignal *)firstSignal, ...</Declaration>
			
			
			<Anchor>//api/name/rac_liftSelector:withSignals:</Anchor>
            <NodeRef refid="158"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSObject/rac_liftSelector:withSignalsFromArray:</TokenIdentifier>
			<Abstract type="html">Like rac_liftSelector:withSignals:, but accepts an array instead of
a variadic list of arguments.</Abstract>
			<DeclaredIn>NSObject+RACLifting.h</DeclaredIn>
			
			<Declaration>- (RACSignal *)rac_liftSelector:(SEL)selector withSignalsFromArray:(NSArray *)signals</Declaration>
			
			
			<Anchor>//api/name/rac_liftSelector:withSignalsFromArray:</Anchor>
            <NodeRef refid="158"/>
		</Token>
		
        
	</File>
</Tokens>