<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/RACScheduler.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/RACScheduler</TokenIdentifier>
			<Abstract type="html">Schedulers are used to control when and where work is performed.
A private interface for internal RAC use only.</Abstract>
			<DeclaredIn>RACScheduler.h</DeclaredIn>
            
			
			<NodeRef refid="118"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/RACScheduler/immediateScheduler</TokenIdentifier>
			<Abstract type="html">A singleton scheduler that immediately executes the blocks it is given.</Abstract>
			<DeclaredIn>RACScheduler.h</DeclaredIn>
			
			<Declaration>+ (RACScheduler *)immediateScheduler</Declaration>
			
			
			<Anchor>//api/name/immediateScheduler</Anchor>
            <NodeRef refid="118"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/RACScheduler/mainThreadScheduler</TokenIdentifier>
			<Abstract type="html">A singleton scheduler that executes blocks in the main thread.</Abstract>
			<DeclaredIn>RACScheduler.h</DeclaredIn>
			
			<Declaration>+ (RACScheduler *)mainThreadScheduler</Declaration>
			
			
			<Anchor>//api/name/mainThreadScheduler</Anchor>
            <NodeRef refid="118"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/RACScheduler/schedulerWithPriority:name:</TokenIdentifier>
			<Abstract type="html">Creates and returns a new background scheduler with the given priority and
name. The name is for debug and instrumentation purposes only.</Abstract>
			<DeclaredIn>RACScheduler.h</DeclaredIn>
			
			<Declaration>+ (RACScheduler *)schedulerWithPriority:(RACSchedulerPriority)priority name:(NSString *)name</Declaration>
			
			
			<Anchor>//api/name/schedulerWithPriority:name:</Anchor>
            <NodeRef refid="118"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/RACScheduler/schedulerWithPriority:</TokenIdentifier>
			<Abstract type="html">Invokes schedulerWithPriority:name: with a default name.</Abstract>
			<DeclaredIn>RACScheduler.h</DeclaredIn>
			
			<Declaration>+ (RACScheduler *)schedulerWithPriority:(RACSchedulerPriority)priority</Declaration>
			
			
			<Anchor>//api/name/schedulerWithPriority:</Anchor>
            <NodeRef refid="118"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/RACScheduler/scheduler</TokenIdentifier>
			<Abstract type="html">Invokes schedulerWithPriority: with RACSchedulerPriorityDefault.</Abstract>
			<DeclaredIn>RACScheduler.h</DeclaredIn>
			
			<Declaration>+ (RACScheduler *)scheduler</Declaration>
			
			
			<Anchor>//api/name/scheduler</Anchor>
            <NodeRef refid="118"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/RACScheduler/currentScheduler</TokenIdentifier>
			<Abstract type="html">The current scheduler. This will only be valid when used from within a
[RACScheduler schedule:] block or when on the main thread.</Abstract>
			<DeclaredIn>RACScheduler.h</DeclaredIn>
			
			<Declaration>+ (RACScheduler *)currentScheduler</Declaration>
			
			
			<Anchor>//api/name/currentScheduler</Anchor>
            <NodeRef refid="118"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RACScheduler/schedule:</TokenIdentifier>
			<Abstract type="html">Schedule the given block for execution on the scheduler.</Abstract>
			<DeclaredIn>RACScheduler.h</DeclaredIn>
			
			<Declaration>- (RACDisposable *)schedule:(void ( ^ ) ( void ))block</Declaration>
			
			
			<Anchor>//api/name/schedule:</Anchor>
            <NodeRef refid="118"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RACScheduler/after:schedule:</TokenIdentifier>
			<Abstract type="html">Schedule the given block for execution on the scheduler at or after
a specific time.</Abstract>
			<DeclaredIn>RACScheduler.h</DeclaredIn>
			
			<Declaration>- (RACDisposable *)after:(NSDate *)date schedule:(void ( ^ ) ( void ))block</Declaration>
			
			
			<Anchor>//api/name/after:schedule:</Anchor>
            <NodeRef refid="118"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RACScheduler/afterDelay:schedule:</TokenIdentifier>
			<Abstract type="html">Schedule the given block for execution on the scheduler after the delay.</Abstract>
			<DeclaredIn>RACScheduler.h</DeclaredIn>
			
			<Declaration>- (RACDisposable *)afterDelay:(NSTimeInterval)delay schedule:(void ( ^ ) ( void ))block</Declaration>
			
			
			<Anchor>//api/name/afterDelay:schedule:</Anchor>
            <NodeRef refid="118"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RACScheduler/after:repeatingEvery:withLeeway:schedule:</TokenIdentifier>
			<Abstract type="html">Reschedule the given block at a particular interval, starting at a specific
time, and with a given leeway for deferral.</Abstract>
			<DeclaredIn>RACScheduler.h</DeclaredIn>
			
			<Declaration>- (RACDisposable *)after:(NSDate *)date repeatingEvery:(NSTimeInterval)interval withLeeway:(NSTimeInterval)leeway schedule:(void ( ^ ) ( void ))block</Declaration>
			
			
			<Anchor>//api/name/after:repeatingEvery:withLeeway:schedule:</Anchor>
            <NodeRef refid="118"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RACScheduler/scheduleRecursiveBlock:</TokenIdentifier>
			<Abstract type="html">Schedule the given recursive block for execution on the scheduler. The
scheduler will automatically flatten any recursive scheduling into iteration
instead, so this can be used without issue for blocks that may keep invoking
themselves forever.</Abstract>
			<DeclaredIn>RACScheduler.h</DeclaredIn>
			
			<Declaration>- (RACDisposable *)scheduleRecursiveBlock:(RACSchedulerRecursiveBlock)recursiveBlock</Declaration>
			
			
			<Anchor>//api/name/scheduleRecursiveBlock:</Anchor>
            <NodeRef refid="118"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RACScheduler/initWithName:</TokenIdentifier>
			<Abstract type="html">Initializes the receiver with the given name.</Abstract>
			<DeclaredIn>RACScheduler+Private.h</DeclaredIn>
			
			<Declaration>- (id)initWithName:(NSString *)name</Declaration>
			
			
			<Anchor>//api/name/initWithName:</Anchor>
            <NodeRef refid="118"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/RACScheduler/subscriptionScheduler</TokenIdentifier>
			<Abstract type="html">A dedicated scheduler that fills two requirements:</Abstract>
			<DeclaredIn>RACScheduler+Private.h</DeclaredIn>
			
			<Declaration>+ (instancetype)subscriptionScheduler</Declaration>
			
			
			<Anchor>//api/name/subscriptionScheduler</Anchor>
            <NodeRef refid="118"/>
		</Token>
		
        
	</File>
</Tokens>